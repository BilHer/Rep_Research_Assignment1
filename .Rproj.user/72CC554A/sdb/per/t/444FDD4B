{
    "contents" : "---\ntitle:  '**Reproducible Research: Peer Assessment 1**'\nauthor: \"B.F.H.H\"\ndate: \"12 de agosto de 2015\"\noutput: html_document\n---\n```{r librerias, echo=FALSE}\nrequire(ggplot2)\nrequire(lubridate)\nrequire(RColorBrewer)\nrequire(dplyr)\nrequire(ggthemes)\nlibrary(scales)\n```\n\n## **Loading and preprocessing the data **\n\nShow any code that is needed to Load the data (i.e. <code>read.csv()</code>)  \nProcess/transform the data (if necessary) into a format suitable for your analysis\n\n*Lubridate's wday function can occupy in the Weekday's full names as ordered factor variables.*  \n*Create a column of these days of the week for each date for subsetting.*\n\n```{r loadata, echo=TRUE}\nactive <- read.csv(\"activity.csv\", colClasses = c(\"numeric\", \"character\", \"numeric\"))\nactive$date <- as.Date(active$date)\nactive$Weekday <- wday(active$date, label = TRUE, abbr = FALSE)\nhead(active)\n```\n\n```{r echo=FALSE}\nmake.sums.ggplot<- function(active.dataframe, RBrewers.colors = \"Greens\"){\n  active.sums <- active.dataframe %>%\n    group_by(date, Weekday) %>%\n    summarise(total_steps = sum(steps))\n  my.cols <- brewer.pal(7, RBrewers.colors)\n  my.cols[1] <- my.cols[7]\n  max.sum <- max(active.sums$total_steps, na.rm = TRUE)\n  ggplot(active.sums, aes(x = date, y = total_steps, fill = Weekday)) + geom_bar(stat = \"identity\") +\n    scale_x_date(breaks=\"1 day\", limits = as.Date(c('2012-10-03','2012-11-28'))) +\n    theme_wsj() +    \n    theme(axis.text.x  = element_text(size=10, angle=45, colour=\"black\", vjust=1, hjust=1)) +     scale_fill_manual(values = my.cols) + \n    geom_text(aes(x = date, y = total_steps, label = total_steps, angle  = 90, size = 5,                   hjust = -0.1), color = \"brown\", show_guide  = F) + \n    coord_cartesian(ylim=c(0,max.sum*1.15)) +\n    geom_hline(aes ( yintercept = mean(total_steps, na.rm = TRUE)), \n               color = \"chocolate3\", size = 1.5, alpha = .50) + \n    geom_hline(aes ( yintercept = median(total_steps, na.rm = TRUE)), \n               color = \"darkred\", alpha = .50) +\n    geom_text(aes(label = paste(\"Overall Mean =\", round(mean(total_steps, na.rm = TRUE), 2)),\n                  x = as.Date('2012-10-05'), y = 20200), color = \"chocolate3\", size = 4) +\n    geom_text(aes(label = paste(\"Overall Median = \", round(median(total_steps, na.rm = TRUE), 2) ),\n                  x = as.Date('2012-10-05'), y = 19700), color = \"darkred\", size = 4) +\n    ylab(\"Total Steps taken per day\") +\n    xlab(NULL)\n}\n```\n## **What is mean total number of steps taken per day?**\n\nFor this part of the assignment, you can ignore the missing values in the dataset.\n\n1.- Calculate the total number of steps taken per day\n\n```{r totalStep, echo=TRUE}\ntotalStep <- aggregate(steps ~ date, data = active, sum, na.rm = TRUE)\nprint(totalStep)\n```\n\nMakes a histogram of the total number of steps taken each day\n\n```{r scatterhist, fig.height=4}\npar(mar = c(5, 4, 1, 1), las = 1)\nhist(totalStep$steps, main = \"Total Steps by Day\", xlab = \"DAY\", col = \"blue\")\n```\n\n2.- Calculate and report the mean and median of the total number of steps taken per day\n```{r mean and median}\nmean(totalStep$steps)\nmedian(totalStep$steps)\n```\n\n## **What is the average daily active pattern?**\n\n1.- Make a time series plot (i.e. <code>type = \"l\"</code>) of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)\n```{r time series}\ntime_series <- tapply(active$steps, active$interval, mean, na.rm = TRUE)\nprint(time_series)\n```\n\n2.- Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?\n```{r plotimeseries}\nplot(row.names(time_series), time_series, type = \"l\", xlab = \"5 min interval\", \n     ylab = \"Average Across All Days\", main = \"Average Number Of Steps Taken\", col = \"purple\")\n```\n\n## **Imputing missing values**\n\n_Note that there are a number of days/intervals where there are missing values (coded as <code>NA</code>). The presence of missing days may introduce bias into some calculations or summaries of the data._\n\n1.- Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with <code>NA</code>s)\n```{r NA}\nsummary(active)\nNA.active <- subset(active, !complete.cases(active))\ntable(NA.active$date)\n```\n\n2.- Devise a strategy for occupying in all of the missing values in the dataset. The strategy does not need to be sophisticated. _For example, you could use the mean/median for that day, or the mean for that 5-minute interval, etc._\n```{r}\nStepsAverage <- aggregate(steps ~ interval, data = active, FUN = mean)\noccupyNA <- numeric()\nfor (i in 1:nrow(active)){\n    obs <- active[i, ]\n    if (is.na(obs$steps)){\n        steps <- subset(StepsAverage, interval == obs$interval)$steps\n    } else {\n        steps <- obs$steps\n    }\n    occupyNA <- c(occupyNA, steps)\n}\nprint(StepsAverage)\n```\n\n3.- Create a new dataset that is equal to the original dataset but with the missing data occupyed in.\n\n```{r}\nnew_active <- active\nnew_active$steps <- occupyNA\n```\n\n4.- Make a histogram of the total number of steps taken each day and Calculate and report the **mean** and **median** total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?\n```{r HistepsTotal2, fig.height=4}\nStepsTotal2 <- aggregate(steps ~ date, data = new_active, sum, na.rm = TRUE)\npar(mar = c(5, 4, 1, 1), las = 1)\nhist(StepsTotal2$steps, main = \"Total Steps by Day\", xlab = \"DAY\", col = \"brown\")\n```\n\n# **Are there differences in activity patterns between weekdays and weekends?**\n\nFor this part the <code>weekdays()</code> function may be of some help here. Use the dataset with the filled-in missing values for this part.\n\n1.- Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day.\n```{r }\nimputed <- active %>%\nmutate(Weekend = ifelse(Weekday %in% c(\"Saturday\", \"Sunday\"), \"Weekend\", \"Weekday\"))\ntable(imputed$Weekend, imputed$Weekday)\n```\n\n2.- Make a panel plot containing a time series plot (i.e. <code>type = \"l\"</code>) of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis). See the README file in the GitHub repository to see an example of what this plot should look like using simulated data.\n```{r}\n\n```\n",
    "created" : 1439415021467.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "522156275",
    "id" : "444FDD4B",
    "lastKnownWriteTime" : 1439508251,
    "path" : "~/GitHub/Rep_Research_Assignment1/Reproducible Research_Peer Assessment 1.Rmd",
    "project_path" : "Reproducible Research_Peer Assessment 1.Rmd",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_markdown"
}